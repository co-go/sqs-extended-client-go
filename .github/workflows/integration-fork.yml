# Run secret-dependent integration tests for forks only after /ok-to-test approval
name: Integration Tests (Fork)

on:
  repository_dispatch:
    types: ["ok-to-test-command"]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
      id-token: write
    if: |
      github.event.client_payload.slash_command.args.named.sha != '' &&
      contains(
        github.event.client_payload.pull_request.head.sha,
        github.event.client_payload.slash_command.args.named.sha
      )
    steps:
      - name: Fork based /ok-to-test checkout
        uses: actions/checkout@v5
        with:
          ref: "refs/pull/${{ github.event.client_payload.pull_request.number }}/merge"

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::520156417308:role/github-action-auth-Role-MJSGfkUydl2D

      - name: Integration Test
        run: make test_integration

      - name: Add job status
        uses: actions/github-script@v8
        env:
          number: ${{ github.event.client_payload.pull_request.number }}
          conclusion: ${{ job.status }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pull } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });

            const ref = pull.head.sha;

            const { data: result } = await github.rest.checks.create({
              ...context.repo,
              name: "Integration Tests (Fork)",
              head_sha: ref,
              status: 'completed',
              conclusion: process.env.conclusion
            });

            return result;
